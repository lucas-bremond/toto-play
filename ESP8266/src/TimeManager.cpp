////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///
///	This file is part of the TotoPlay library.
///
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///	@file 						TotoPlay/TimeManager.cpp
///	@author 					Lucas Bremond <lucas@axelspace.com>
///	@date 						9 Oct 2016

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include <TotoPlay/TimeManager.hpp>

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

namespace TotoPlay
{

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

								TimeManager::TimeManager					( )
								:	NTPServer_("pool.ntp.org"),
									pollingInterval_(30),
									NTPClient_(nullptr)
{

}

bool							TimeManager::isActive						( ) const
{
	return (NTPClient_ != nullptr) ;
}

void							TimeManager::start							( )
{

	if (this->isActive())
	{
		this->stop() ;
	}

	NTPClient_																	=		new NtpClient(NTPServer_, pollingInterval_, NtpTimeResultDelegate(&TimeManager::onNtpReceive, this)) ;

}

void							TimeManager::stop							( )
{

	if (!this->isActive())
	{
		return ;
	}

	delete NTPClient_ ;

	NTPClient_																	=		nullptr ;

}

void							TimeManager::setClockSetHandler				(		Delegate<void()>				aDelegate							)
{
	clockSetHandler_															=		aDelegate ;
}

void							TimeManager::onNtpReceive					(			NtpClient&					aNTPClient,
																						time_t						aNTPTime							)
{

	SystemClock.setTime(aNTPTime, TimeZone::eTZ_UTC) ;

	if (clockSetHandler_)
	{
		clockSetHandler_() ;
	}

}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////