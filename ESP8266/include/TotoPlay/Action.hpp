////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///
///	This file is part of the TotoPlay library.
///
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///	@file						TotoPlay/Action.hpp
///	@author						Lucas Bremond <lucas@axelspace.com>
///	@date						9 Oct 2016

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#ifndef __TotoPlay_Action_HPP_INCLUDED__
#define __TotoPlay_Action_HPP_INCLUDED__

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include <SmingCore/SmingCore.h>

#include <TotoPlay/Time.hpp>
#include <TotoPlay/Angle.hpp>

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

namespace TotoPlay
{

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class Action
{

	public:

		enum class Type
		{

			Undefined,
			Rotation

		} ;

		enum class Status
		{

			Undefined,
			Pending,
			Executing,
			Completed,
			Failed

		} ;

								Action										(	const	Action::Type&				aType								) ;

		bool					isDefined									( ) const ;

		uint					getId										( ) const ;
		Action::Type			getType										( ) const ;
		Action::Status			getStatus									( ) const ;

		Angle					getRotationAngle							( ) const ;

		void					setStatus									(	const	Action::Status&				aStatus								) ;

		static Action			Undefined									( ) ;

		static Action			Rotation									(	const	Angle&						anAngle								) ;

		static Action::Type		TypeFromString								(	const	String&						aString								) ;
		static String			StringFromType								(	const	Action::Type&				aType								) ;

		static Action::Status	StatusFromString							(	const	String&						aString								) ;
		static String			StringFromStatus							(	const	Action::Status&				aStatus								) ;

	private:

		uint					id_ ;
		Action::Type			type_ ;
		Action::Status			status_ ;

		Angle					rotationAngle_ ;

} ;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#endif

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////