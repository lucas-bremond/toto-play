////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///
///	This file is part of the TotoPlay library.
///
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///	@file 						TotoPlay/Angle.hpp
///	@author 					Lucas Bremond <lucas@axelspace.com>
///	@date 						9 Oct 2016

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#ifndef __TotoPlay_Angle_HPP_INCLUDED__
#define __TotoPlay_Angle_HPP_INCLUDED__

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include <SmingCore/SmingCore.h>

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

namespace TotoPlay
{

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class Angle
{

	public:

								Angle 										( ) ;

		bool					operator ==									(	const 	Angle&						anAngle 							) const ;
		bool					operator !=									(	const 	Angle&						anAngle 							) const ;
		bool					operator <=									(	const 	Angle&						anAngle 							) const ;
		bool					operator <									(	const 	Angle&						anAngle 							) const ;
		bool					operator >=									(	const 	Angle&						anAngle 							) const ;
		bool					operator >									(	const 	Angle&						anAngle 							) const ;

		Angle 					operator +									(	const 	Angle&						anAngle								) const ;
		Angle 					operator -									(	const 	Angle&						anAngle								) const ;

		bool					isDefined									( ) const ;
		bool					isZero										( ) const ;

		float					getDegrees									( ) const ;
		float					getRadians									( ) const ;
		float					getRevolutions								( ) const ;

		String					getString									( ) const ;

		static Angle 			Undefined									( ) ;

		static Angle 			Zero										( ) ;

		static Angle 			Degrees										( 	const 	float&						aValue								) ;
		static Angle 			Radians										( 	const 	float&						aValue								) ;
		static Angle 			Revolutions									( 	const 	float&						aValue								) ;

		static Angle 			Parse										( 	const 	String&						aString								) ;

	private:

		bool					defined_ ;
		float					degrees_ ;

} ;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#endif

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////